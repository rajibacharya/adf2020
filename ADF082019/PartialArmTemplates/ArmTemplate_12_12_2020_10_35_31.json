{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF082019"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/P_COPY_FILES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_srs",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dest",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_srs')]",
				"[concat(variables('factoryId'), '/datasets/ds_dest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_covid_dataload')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cp_covid_raw_stgsql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE dbo.rawcoviddata",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "submission_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "submission_date",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "state",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "state",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tot_cases",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tot_cases",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "conf_cases",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "conf_cases",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "prob_cases",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "prob_cases",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "new_case",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "new_case",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "pnew_case",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pnew_case",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tot_death",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tot_death",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "conf_death",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "conf_death",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "prob_death",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "prob_death",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "new_death",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "new_death",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "pnew_death",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pnew_death",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "created_at",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "consent_cases",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "consent_cases",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "consent_deaths",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "consent_deaths",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_covid_src_rawdata_adls",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ds_covid_dest_rawdata_asql",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "lkp_covid_minmax_rawdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_covid_dataload",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "lkp_covid_minmax_rawdata",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "cp_covid_raw_stgsql",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT ISNULL(MIN(submission_date),'2000-01-01') MinDate, ISNULL(MAX(submission_date),'2100-12-31') MaxDate FROM RawCovidData",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_covid_dest_rawdata_asql",
								"type": "DatasetReference"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_covid_src_rawdata_adls')]",
				"[concat(variables('factoryId'), '/datasets/ds_covid_dest_rawdata_asql')]",
				"[concat(variables('factoryId'), '/dataflows/df_covid_dataload')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_covid_dest_rawdata_asql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "submission_date",
						"type": "varchar"
					},
					{
						"name": "state",
						"type": "varchar"
					},
					{
						"name": "tot_cases",
						"type": "varchar"
					},
					{
						"name": "conf_cases",
						"type": "varchar"
					},
					{
						"name": "prob_cases",
						"type": "varchar"
					},
					{
						"name": "new_case",
						"type": "varchar"
					},
					{
						"name": "pnew_case",
						"type": "varchar"
					},
					{
						"name": "tot_death",
						"type": "varchar"
					},
					{
						"name": "conf_death",
						"type": "varchar"
					},
					{
						"name": "prob_death",
						"type": "varchar"
					},
					{
						"name": "new_death",
						"type": "varchar"
					},
					{
						"name": "pnew_death",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "varchar"
					},
					{
						"name": "consent_cases",
						"type": "varchar"
					},
					{
						"name": "consent_deaths",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RawCovidDate"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_covid_factcoviddata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CovidDataKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ConformedNewCases",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProbableNewCases",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ConformedNewDeath",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProbableNewDeath",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactCovidData"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_covid_src_dimcalendar_asql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date",
						"type": "date"
					},
					{
						"name": "DayDate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayOfWeekName",
						"type": "nvarchar"
					},
					{
						"name": "WeekNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MonthNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MonthName",
						"type": "nvarchar"
					},
					{
						"name": "MonthShortName",
						"type": "nvarchar"
					},
					{
						"name": "Year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QuarterNumber",
						"type": "nvarchar"
					},
					{
						"name": "QuarterName",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimCalendar"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_covid_src_dimstate_asql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "StateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StateCode",
						"type": "nchar"
					},
					{
						"name": "StateName",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimState"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_covid_src_rawdata_adls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "United_States_COVID-19_Cases_and_Deaths_by_State_over_Time.csv",
						"folderPath": "input/coviddata",
						"fileSystem": "storage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "submission_date",
						"type": "String"
					},
					{
						"name": "state",
						"type": "String"
					},
					{
						"name": "tot_cases",
						"type": "String"
					},
					{
						"name": "conf_cases",
						"type": "String"
					},
					{
						"name": "prob_cases",
						"type": "String"
					},
					{
						"name": "new_case",
						"type": "String"
					},
					{
						"name": "pnew_case",
						"type": "String"
					},
					{
						"name": "tot_death",
						"type": "String"
					},
					{
						"name": "conf_death",
						"type": "String"
					},
					{
						"name": "prob_death",
						"type": "String"
					},
					{
						"name": "new_death",
						"type": "String"
					},
					{
						"name": "pnew_death",
						"type": "String"
					},
					{
						"name": "created_at",
						"type": "String"
					},
					{
						"name": "consent_cases",
						"type": "String"
					},
					{
						"name": "consent_deaths",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "storage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_srs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "User_Input.csv",
						"folderPath": "input",
						"fileSystem": "storage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adlsg2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "https://adls22020.dfs.core.windows.net",
					"accountKey": {
						"type": "SecureString",
						"value": "**********"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_covid_dataload')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_covid_dest_rawdata_asql",
								"type": "DatasetReference"
							},
							"name": "SrcRawCoviDataAsql"
						},
						{
							"dataset": {
								"referenceName": "ds_covid_src_dimcalendar_asql",
								"type": "DatasetReference"
							},
							"name": "SrcDimDate"
						},
						{
							"dataset": {
								"referenceName": "ds_covid_src_dimstate_asql",
								"type": "DatasetReference"
							},
							"name": "SrcDimState"
						},
						{
							"dataset": {
								"referenceName": "ds_covid_factcoviddata",
								"type": "DatasetReference"
							},
							"name": "SrcFactCovidData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_covid_factcoviddata",
								"type": "DatasetReference"
							},
							"name": "SnkLoadFactCovidDate"
						}
					],
					"transformations": [
						{
							"name": "DerConformedCasesAndDeath"
						},
						{
							"name": "SelStgColumns"
						},
						{
							"name": "JoinDimCalendar"
						},
						{
							"name": "SelRequiredColumns"
						},
						{
							"name": "DerReplaceNullWithDefault"
						},
						{
							"name": "Join1"
						},
						{
							"name": "LkpFactCovid"
						},
						{
							"name": "AltDefInsertUpdateCondition"
						},
						{
							"name": "SelNewAndLkpCol"
						}
					],
					"script": "source(output(\n\t\tsubmission_date as string,\n\t\tstate as string,\n\t\ttot_cases as string,\n\t\tconf_cases as string,\n\t\tprob_cases as string,\n\t\tnew_case as string,\n\t\tpnew_case as string,\n\t\ttot_death as string,\n\t\tconf_death as string,\n\t\tprob_death as string,\n\t\tnew_death as string,\n\t\tpnew_death as string,\n\t\tcreated_at as string,\n\t\tconsent_cases as string,\n\t\tconsent_deaths as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SrcRawCoviDataAsql\nsource(output(\n\t\tDateKey as integer,\n\t\tDate as date,\n\t\tDayDate as integer,\n\t\tDayOfWeekName as string,\n\t\tWeekNumber as integer,\n\t\tMonthNumber as integer,\n\t\tMonthName as string,\n\t\tMonthShortName as string,\n\t\tYear as integer,\n\t\tQuarterNumber as string,\n\t\tQuarterName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT * FROM DimCalendar WHERE [Date] >= (SELECT ISNULL(MIN(submission_date),\\'2020-01-01\\') FROM RawCovidData) \\nAND [Date] <= (SELECT ISNULL(MAX(submission_date),\\'2020-12-31\\') FROM RawCovidData)',\n\tformat: 'query') ~> SrcDimDate\nsource(output(\n\t\tStateKey as integer,\n\t\tStateCode as string,\n\t\tStateName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SrcDimState\nsource(output(\n\t\tCovidDataKey as integer,\n\t\tDateKey as integer,\n\t\tStateKey as integer,\n\t\tConformedNewCases as integer,\n\t\tProbableNewCases as integer,\n\t\tConformedNewDeath as integer,\n\t\tProbableNewDeath as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SrcFactCovidData\nSrcRawCoviDataAsql derive(DateId = toDate(submission_date, \"yyyy-MM-dd\"),\n\t\tConformedNewCases = toInteger(new_case) - toInteger(pnew_case),\n\t\tConformedNewDeath = toInteger(new_death) - toInteger(pnew_death),\n\t\tProbableNewCases = toInteger(pnew_case),\n\t\tProbableNewDeath = toInteger(pnew_death)) ~> DerConformedCasesAndDeath\nDerConformedCasesAndDeath select(mapColumn(\n\t\tDateId,\n\t\tStateCode = state,\n\t\tConformedNewCases,\n\t\tProbableNewCases,\n\t\tConformedNewDeath,\n\t\tProbableNewDeath\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelStgColumns\nJoin1, SelStgColumns join(Date == DateId\n\t&& SrcDimState@StateCode == SelStgColumns@StateCode,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinDimCalendar\nDerReplaceNullWithDefault select(mapColumn(\n\t\tDateKey,\n\t\tStateKey,\n\t\tConformedNewCases = DerConformedNewCases,\n\t\tProbableNewCases = DerProbableNewCases,\n\t\tConformedNewDeath = DerConformedNewDeath,\n\t\tProbableNewDeath = DerProbableNewDeath\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelRequiredColumns\nJoinDimCalendar derive(DerConformedNewCases = iifNull(ConformedNewCases, 0),\n\t\tDerProbableNewCases = iifNull(ProbableNewCases, 0),\n\t\tDerConformedNewDeath = iifNull(ConformedNewDeath, 0),\n\t\tDerProbableNewDeath = iifNull(ProbableNewDeath, 0)) ~> DerReplaceNullWithDefault\nSrcDimDate, SrcDimState join(1==1,\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> Join1\nSelRequiredColumns, SrcFactCovidData lookup(SelRequiredColumns@DateKey == SrcFactCovidData@DateKey\n\t&& SelRequiredColumns@StateKey == SrcFactCovidData@StateKey,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpFactCovid\nSelNewAndLkpCol alterRow(insertIf(or(isNull(lkp_DateKey),isNull(lkp_StateKey))),\n\tupdateIf((!isNull(lkp_DateKey)&&!isNull(lkp_StateKey))&&((ConformedNewCases!=lkp_ConformedNewCases)||(ConformedNewDeath!=lkp_ConformedNewDeath)||(ProbableNewCases!=lkp_ProbableNewCases)||(ProbableNewDeath!=lkp_ProbableNewDeath)))) ~> AltDefInsertUpdateCondition\nLkpFactCovid select(mapColumn(\n\t\tDateKey = SelRequiredColumns@DateKey,\n\t\tStateKey = SelRequiredColumns@StateKey,\n\t\tConformedNewCases = SelRequiredColumns@ConformedNewCases,\n\t\tProbableNewCases = SelRequiredColumns@ProbableNewCases,\n\t\tConformedNewDeath = SelRequiredColumns@ConformedNewDeath,\n\t\tProbableNewDeath = SelRequiredColumns@ProbableNewDeath,\n\t\tlkp_DateKey = SrcFactCovidData@DateKey,\n\t\tlkp_StateKey = SrcFactCovidData@StateKey,\n\t\tlkp_ConformedNewCases = SrcFactCovidData@ConformedNewCases,\n\t\tlkp_ProbableNewCases = SrcFactCovidData@ProbableNewCases,\n\t\tlkp_ConformedNewDeath = SrcFactCovidData@ConformedNewDeath,\n\t\tlkp_ProbableNewDeath = SrcFactCovidData@ProbableNewDeath\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelNewAndLkpCol\nAltDefInsertUpdateCondition sink(input(\n\t\tCovidDataKey as integer,\n\t\tDateKey as integer,\n\t\tStateKey as integer,\n\t\tConformedNewCases as integer,\n\t\tProbableNewCases as integer,\n\t\tConformedNewDeath as integer,\n\t\tProbableNewDeath as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['DateKey','StateKey'],\n\tformat: 'table',\n\tmapColumn(\n\t\tDateKey,\n\t\tStateKey,\n\t\tConformedNewCases,\n\t\tProbableNewCases,\n\t\tConformedNewDeath,\n\t\tProbableNewDeath\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SnkLoadFactCovidDate"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_covid_dest_rawdata_asql')]",
				"[concat(variables('factoryId'), '/datasets/ds_covid_src_dimcalendar_asql')]",
				"[concat(variables('factoryId'), '/datasets/ds_covid_src_dimstate_asql')]",
				"[concat(variables('factoryId'), '/datasets/ds_covid_factcoviddata')]"
			]
		}
	]
}